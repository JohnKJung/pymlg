Search.setIndex({"docnames": ["index", "se2", "se23", "se3", "sl3", "so2", "so3"], "filenames": ["index.rst", "se2.rst", "se23.rst", "se3.rst", "sl3.rst", "so2.rst", "so3.rst"], "titles": ["PYLIE", "SE2", "SE23", "SE3", "SL3", "SO2", "SO3"], "terms": {"an": [0, 1, 2, 3, 4, 5, 6], "instanti": [0, 1, 2, 3, 4, 5, 6], "free": [0, 1, 2, 3, 4, 5, 6], "python": 0, "librari": 0, "common": 0, "oper": [0, 1, 2, 3, 4, 5, 6], "function": 0, "thi": [0, 4, 6], "repo": 0, "entir": 0, "numpi": 0, "arrai": 0, "intent": 0, "minim": 0, "overhead": 0, "keep": 0, "implement": [0, 1, 2, 3, 4, 5, 6], "simpl": 0, "possibl": 0, "all": 0, "method": [0, 1, 2, 3, 4, 5, 6], "ar": 0, "static": [0, 1, 2, 3, 4, 5, 6], "allow": 0, "easi": 0, "consist": 0, "us": [0, 2, 3, 6], "so2": 0, "so3": 0, "se2": 0, "se3": [0, 1], "se23": 0, "from": [0, 1, 2, 3, 4, 5, 6], "import": 0, "np": [0, 3], "random": [0, 1, 2, 3, 4, 5, 6], "pose": [0, 3], "t": [0, 1, 3, 6], "r": [0, 1, 2, 3, 4, 5, 6], "n": [0, 1, 2, 3, 4, 5, 6], "directli": [0, 1, 2, 3, 4, 5, 6], "capit": 0, "notat": 0, "x": [0, 1, 2, 3, 4, 5, 6], "0": 0, "1": [0, 5, 6], "2": [0, 1, 5, 6], "3": [0, 1, 2, 3, 4, 6], "exp": [0, 1, 2, 3, 4, 5, 6], "log": [0, 1, 2, 3, 4, 5, 6], "wedg": [0, 1, 2, 3, 4, 5, 6], "vee": [0, 1, 2, 3, 4, 5, 6], "xi": [0, 1, 2, 3, 4, 5, 6], "actual": 0, "map": [0, 1, 2, 3, 4, 5, 6], "adjoint": [0, 1, 2, 3, 4, 5, 6], "represent": [0, 1, 2, 3, 4, 5, 6], "element": [0, 1, 2, 3, 4, 5, 6], "A": 0, "left": [0, 1, 2, 3, 4, 5, 6], "right": [0, 1, 2, 3, 4, 5, 6], "jacobian": [0, 1, 2, 3, 4, 5, 6], "j_l": 0, "left_jacobian": [0, 1, 2, 3, 4, 5, 6], "j_r": 0, "right_jacobian": [0, 1, 2, 3, 4, 5, 6], "j_l_inv": 0, "left_jacobian_inv": [0, 1, 2, 3, 4, 5, 6], "j_r_inv": 0, "right_jacobian_inv": [0, 1, 2, 3, 4, 5, 6], "odot": [0, 1, 2, 3, 4, 5, 6], "defin": [0, 1, 2, 3, 5, 6], "b": [0, 1, 2, 3, 5, 6], "matrixliegroup": [0, 1, 2, 3, 4, 5, 6], "inherit": 0, "provid": 0, "few": 0, "gener": 0, "classmethod": [0, 1, 2, 3, 4, 5, 6], "shortcut": [0, 1, 2, 3, 4, 5, 6], "mathrm": [0, 1, 2, 3, 4, 5, 6], "mathbb": [0, 1, 2, 3, 4, 5, 6], "g": [0, 1, 2, 3, 4, 5, 6], "ad": [0, 1, 2, 3, 5, 6], "mathbf": [0, 1, 2, 3, 5, 6], "adjoint_algebra": [0, 1, 2, 3, 4, 5, 6], "algebra": [0, 1, 2, 3, 4, 5, 6], "dof": [0, 1, 2, 3, 4, 5, 6], "none": 0, "The": [0, 1, 2, 3, 4, 5, 6], "degre": [0, 1, 2, 3, 4, 5, 6], "freedom": [0, 1, 2, 3, 4, 5, 6], "type": [0, 1, 2, 3, 4, 5, 6], "int": [0, 1, 2, 3, 4, 5, 6], "exponenti": [0, 1, 2, 3, 4, 5], "mathfrak": [0, 1, 2, 3, 4, 5, 6], "ident": [0, 1, 2, 3, 4, 5, 6], "return": [0, 1, 2, 3, 4, 5, 6], "invers": [0, 1, 2, 3, 4, 5, 6], "evalu": [0, 1, 2, 3, 4, 5, 6], "logarithm": [0, 1, 2, 3, 4, 5, 6], "normal": [0, 1, 2, 3, 4, 5, 6], "elimin": [0, 1, 2, 3, 4, 5, 6], "round": [0, 1, 2, 3, 4, 5, 6], "error": [0, 1, 2, 3, 4, 5, 6], "ensur": [0, 1, 2, 3, 4, 5, 6], "i": [0, 1, 2, 3, 4, 5, 6], "proper": [0, 1, 2, 3, 4, 5, 6], "barfoot": [0, 1, 2, 3, 5, 6], "e": [0, 1, 2, 3, 5, 6], "requir": [0, 1, 2, 3, 4, 5, 6], "subclass": [0, 1, 2, 3, 4, 5, 6], "cdot": [0, 1, 2, 3, 4, 5, 6], "se": [1, 3], "special": [1, 3, 5, 6], "eucledian": 1, "group": [1, 2, 3, 4, 5, 6], "2d": [1, 5], "class": [1, 2, 3, 4, 5, 6], "pyli": [1, 2, 3, 4, 5, 6], "base": [1, 2, 3, 4, 5, 6], "matrix": [1, 2, 3, 4, 5, 6], "lie": [1, 2, 3, 4, 5, 6], "attribut": [1, 2, 3, 4, 5, 6], "v_matrix": 1, "phi": [1, 5], "v_matrix_inv": 1, "from_compon": [1, 2, 3], "c": [1, 2, 3, 5, 6], "construct": [1, 2, 3], "rotat": [1, 2, 3, 6], "translat": [1, 3], "vector": [1, 2, 3, 4, 6], "to_compon": [1, 2, 3], "decompos": [1, 2, 3], "se_2": 2, "doubl": 2, "direct": 2, "isometri": 2, "element_se23": 2, "deprec": [2, 3], "9": [2, 6], "v": 2, "attitud": 2, "veloc": 2, "posit": [2, 4, 6], "compon": 2, "paramet": [2, 3, 6], "ndarrai": [2, 3, 6], "shape": [2, 3, 6], "dcm": [2, 6], "list": [2, 6], "float": [2, 6], "size": [2, 6], "5": 2, "synthes": [2, 3], "extract": 2, "euclidean": 3, "3d": [3, 4, 6], "6": 3, "from_ro": [3, 6], "pose_msg": 3, "ro": [3, 6], "messag": 3, "geometry_msg": [3, 6], "msg": [3, 6], "transform": 3, "4": [3, 4, 6], "instead": 3, "to_ro": [3, 6], "so": [5, 6], "orthogon": [5, 6], "cross": 6, "altern": 6, "name": 6, "section": [4, 6], "8": [4, 6], "comput": [4, 6], "vision": [4, 6], "ethan": 6, "ead": [4, 6], "when": 6, "theta": 6, "small": 6, "taylor": 6, "seri": 6, "expans": 6, "given": 6, "11": 6, "from_eul": 6, "angl": 6, "order": 6, "creat": 6, "euler": 6, "specifi": 6, "valu": 6, "option": 6, "sequenc": 6, "For": 6, "exampl": 6, "default": 6, "third": 6, "axi": 6, "follow": 6, "second": 6, "first": 6, "correspond": 6, "from_quat": 6, "q": 6, "wxyz": 6, "quaternion": 6, "epsilon": 6, "eta": 6, "time": 6, "note": 6, "final": 6, "term": 6, "abid": 6, "robot": 6, "convent": 6, "differ": 6, "2019": 6, "str": 6, "xyzw": 6, "rais": 6, "valueerror": 6, "convert": 6, "to_eul": 6, "rpy": 6, "alpha": 6, "beta": 6, "gamma": 6, "to_quat": 6, "doe": 6, "have": 6, "sl": 4, "homographi": 4, "h": 4, "obtain": 4, "7": 4, "xi_1": [], "xi_2": [], "ee": [], "numer": 4, "p": 4, "express": 4, "help": 4, "where": 4, "p_odot": 4, "3x1": 4, "usual": 4, "repres": 4, "sl3": 0}, "objects": {"pylie": [[0, 0, 1, "", "MatrixLieGroup"], [1, 0, 1, "", "SE2"], [2, 0, 1, "", "SE23"], [3, 0, 1, "", "SE3"], [4, 0, 1, "", "SL3"], [5, 0, 1, "", "SO2"], [6, 0, 1, "", "SO3"]], "pylie.MatrixLieGroup": [[0, 1, 1, "", "Exp"], [0, 1, 1, "", "Log"], [0, 1, 1, "", "adjoint"], [0, 1, 1, "", "adjoint_algebra"], [0, 2, 1, "", "dof"], [0, 1, 1, "", "exp"], [0, 1, 1, "", "identity"], [0, 1, 1, "", "inverse"], [0, 1, 1, "", "left_jacobian"], [0, 1, 1, "", "left_jacobian_inv"], [0, 1, 1, "", "log"], [0, 1, 1, "", "normalize"], [0, 1, 1, "", "odot"], [0, 1, 1, "", "random"], [0, 1, 1, "", "right_jacobian"], [0, 1, 1, "", "right_jacobian_inv"], [0, 1, 1, "", "vee"], [0, 1, 1, "", "wedge"]], "pylie.SE2": [[1, 1, 1, "", "Exp"], [1, 1, 1, "", "Log"], [1, 1, 1, "", "V_matrix"], [1, 1, 1, "", "V_matrix_inv"], [1, 1, 1, "", "adjoint"], [1, 1, 1, "", "adjoint_algebra"], [1, 2, 1, "", "dof"], [1, 1, 1, "", "exp"], [1, 1, 1, "", "from_components"], [1, 1, 1, "", "identity"], [1, 1, 1, "", "inverse"], [1, 1, 1, "", "left_jacobian"], [1, 1, 1, "", "left_jacobian_inv"], [1, 1, 1, "", "log"], [1, 1, 1, "", "normalize"], [1, 1, 1, "", "odot"], [1, 1, 1, "", "random"], [1, 1, 1, "", "right_jacobian"], [1, 1, 1, "", "right_jacobian_inv"], [1, 1, 1, "", "to_components"], [1, 1, 1, "", "vee"], [1, 1, 1, "", "wedge"]], "pylie.SE23": [[2, 1, 1, "", "Exp"], [2, 1, 1, "", "Log"], [2, 1, 1, "", "adjoint"], [2, 1, 1, "", "adjoint_algebra"], [2, 1, 1, "", "decompose"], [2, 2, 1, "", "dof"], [2, 1, 1, "", "exp"], [2, 1, 1, "", "from_components"], [2, 1, 1, "", "identity"], [2, 1, 1, "", "inverse"], [2, 1, 1, "", "left_jacobian"], [2, 1, 1, "", "left_jacobian_inv"], [2, 1, 1, "", "log"], [2, 1, 1, "", "normalize"], [2, 1, 1, "", "odot"], [2, 1, 1, "", "random"], [2, 1, 1, "", "right_jacobian"], [2, 1, 1, "", "right_jacobian_inv"], [2, 1, 1, "", "synthesize"], [2, 1, 1, "", "to_components"], [2, 1, 1, "", "vee"], [2, 1, 1, "", "wedge"]], "pylie.SE3": [[3, 1, 1, "", "Exp"], [3, 1, 1, "", "Log"], [3, 1, 1, "", "adjoint"], [3, 1, 1, "", "adjoint_algebra"], [3, 2, 1, "", "dof"], [3, 1, 1, "", "exp"], [3, 1, 1, "", "from_components"], [3, 1, 1, "", "from_ros"], [3, 1, 1, "", "identity"], [3, 1, 1, "", "inverse"], [3, 1, 1, "", "left_jacobian"], [3, 1, 1, "", "left_jacobian_inv"], [3, 1, 1, "", "log"], [3, 1, 1, "", "normalize"], [3, 1, 1, "", "odot"], [3, 1, 1, "", "random"], [3, 1, 1, "", "right_jacobian"], [3, 1, 1, "", "right_jacobian_inv"], [3, 1, 1, "", "synthesize"], [3, 1, 1, "", "to_components"], [3, 1, 1, "", "to_ros"], [3, 1, 1, "", "vee"], [3, 1, 1, "", "wedge"]], "pylie.SL3": [[4, 1, 1, "", "Exp"], [4, 1, 1, "", "Log"], [4, 1, 1, "", "adjoint"], [4, 1, 1, "", "adjoint_algebra"], [4, 2, 1, "", "dof"], [4, 1, 1, "", "exp"], [4, 1, 1, "", "identity"], [4, 1, 1, "", "inverse"], [4, 1, 1, "", "left_jacobian"], [4, 1, 1, "", "left_jacobian_inv"], [4, 1, 1, "", "log"], [4, 1, 1, "", "normalize"], [4, 1, 1, "", "odot"], [4, 1, 1, "", "random"], [4, 1, 1, "", "right_jacobian"], [4, 1, 1, "", "right_jacobian_inv"], [4, 1, 1, "", "vee"], [4, 1, 1, "", "wedge"]], "pylie.SO2": [[5, 1, 1, "", "Exp"], [5, 1, 1, "", "Log"], [5, 1, 1, "", "adjoint"], [5, 1, 1, "", "adjoint_algebra"], [5, 2, 1, "", "dof"], [5, 1, 1, "", "exp"], [5, 1, 1, "", "identity"], [5, 1, 1, "", "inverse"], [5, 1, 1, "", "left_jacobian"], [5, 1, 1, "", "left_jacobian_inv"], [5, 1, 1, "", "log"], [5, 1, 1, "", "normalize"], [5, 1, 1, "", "odot"], [5, 1, 1, "", "random"], [5, 1, 1, "", "right_jacobian"], [5, 1, 1, "", "right_jacobian_inv"], [5, 1, 1, "", "vee"], [5, 1, 1, "", "wedge"]], "pylie.SO3": [[6, 1, 1, "", "Exp"], [6, 1, 1, "", "Log"], [6, 1, 1, "", "adjoint"], [6, 1, 1, "", "adjoint_algebra"], [6, 1, 1, "", "cross"], [6, 2, 1, "", "dof"], [6, 1, 1, "", "exp"], [6, 1, 1, "", "from_euler"], [6, 1, 1, "", "from_quat"], [6, 1, 1, "", "from_ros"], [6, 1, 1, "", "identity"], [6, 1, 1, "", "inverse"], [6, 1, 1, "", "left_jacobian"], [6, 1, 1, "", "left_jacobian_inv"], [6, 1, 1, "", "log"], [6, 1, 1, "", "normalize"], [6, 1, 1, "", "odot"], [6, 1, 1, "", "random"], [6, 1, 1, "", "right_jacobian"], [6, 1, 1, "", "right_jacobian_inv"], [6, 1, 1, "", "to_euler"], [6, 1, 1, "", "to_quat"], [6, 1, 1, "", "to_ros"], [6, 1, 1, "", "vee"], [6, 1, 1, "", "wedge"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"]}, "titleterms": {"pyli": 0, "content": 0, "exampl": 0, "matrix": 0, "lie": 0, "group": 0, "base": 0, "class": 0, "se2": 1, "se23": 2, "se3": 3, "so2": 5, "so3": 6, "sl3": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"SE2": [[1, "se2"]], "SE23": [[2, "se23"]], "SE3": [[3, "se3"]], "SO2": [[5, "so2"]], "SO3": [[6, "so3"]], "PYLIE": [[0, "pylie"]], "Contents:": [[0, null]], "Example": [[0, "example"]], "Matrix Lie Group Base Class": [[0, "matrix-lie-group-base-class"]], "SL3": [[4, "sl3"]]}, "indexentries": {"exp() (pylie.matrixliegroup class method)": [[0, "pylie.MatrixLieGroup.Exp"]], "log() (pylie.matrixliegroup class method)": [[0, "pylie.MatrixLieGroup.Log"]], "matrixliegroup (class in pylie)": [[0, "pylie.MatrixLieGroup"]], "adjoint() (pylie.matrixliegroup static method)": [[0, "pylie.MatrixLieGroup.adjoint"]], "adjoint_algebra() (pylie.matrixliegroup static method)": [[0, "pylie.MatrixLieGroup.adjoint_algebra"]], "dof (pylie.matrixliegroup attribute)": [[0, "pylie.MatrixLieGroup.dof"]], "exp() (pylie.matrixliegroup static method)": [[0, "pylie.MatrixLieGroup.exp"]], "identity() (pylie.matrixliegroup class method)": [[0, "pylie.MatrixLieGroup.identity"]], "inverse() (pylie.matrixliegroup static method)": [[0, "pylie.MatrixLieGroup.inverse"]], "left_jacobian() (pylie.matrixliegroup static method)": [[0, "pylie.MatrixLieGroup.left_jacobian"]], "left_jacobian_inv() (pylie.matrixliegroup class method)": [[0, "pylie.MatrixLieGroup.left_jacobian_inv"]], "log() (pylie.matrixliegroup static method)": [[0, "pylie.MatrixLieGroup.log"]], "normalize() (pylie.matrixliegroup static method)": [[0, "pylie.MatrixLieGroup.normalize"]], "odot() (pylie.matrixliegroup static method)": [[0, "pylie.MatrixLieGroup.odot"]], "random() (pylie.matrixliegroup static method)": [[0, "pylie.MatrixLieGroup.random"]], "right_jacobian() (pylie.matrixliegroup class method)": [[0, "pylie.MatrixLieGroup.right_jacobian"]], "right_jacobian_inv() (pylie.matrixliegroup class method)": [[0, "pylie.MatrixLieGroup.right_jacobian_inv"]], "vee() (pylie.matrixliegroup static method)": [[0, "pylie.MatrixLieGroup.vee"]], "wedge() (pylie.matrixliegroup static method)": [[0, "pylie.MatrixLieGroup.wedge"]], "exp() (pylie.sl3 class method)": [[4, "pylie.SL3.Exp"]], "log() (pylie.sl3 class method)": [[4, "pylie.SL3.Log"]], "sl3 (class in pylie)": [[4, "pylie.SL3"]], "adjoint() (pylie.sl3 static method)": [[4, "pylie.SL3.adjoint"]], "adjoint_algebra() (pylie.sl3 static method)": [[4, "pylie.SL3.adjoint_algebra"]], "dof (pylie.sl3 attribute)": [[4, "pylie.SL3.dof"]], "exp() (pylie.sl3 static method)": [[4, "pylie.SL3.exp"]], "identity() (pylie.sl3 class method)": [[4, "pylie.SL3.identity"]], "inverse() (pylie.sl3 static method)": [[4, "pylie.SL3.inverse"]], "left_jacobian() (pylie.sl3 static method)": [[4, "pylie.SL3.left_jacobian"]], "left_jacobian_inv() (pylie.sl3 class method)": [[4, "pylie.SL3.left_jacobian_inv"]], "log() (pylie.sl3 static method)": [[4, "pylie.SL3.log"]], "normalize() (pylie.sl3 static method)": [[4, "pylie.SL3.normalize"]], "odot() (pylie.sl3 static method)": [[4, "pylie.SL3.odot"]], "random() (pylie.sl3 static method)": [[4, "pylie.SL3.random"]], "right_jacobian() (pylie.sl3 class method)": [[4, "pylie.SL3.right_jacobian"]], "right_jacobian_inv() (pylie.sl3 class method)": [[4, "pylie.SL3.right_jacobian_inv"]], "vee() (pylie.sl3 static method)": [[4, "pylie.SL3.vee"]], "wedge() (pylie.sl3 static method)": [[4, "pylie.SL3.wedge"]]}})