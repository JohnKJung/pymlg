Search.setIndex({"docnames": ["_autosummary/pymlg.MatrixLieGroup", "_autosummary/pymlg.SE2", "_autosummary/pymlg.SE23", "_autosummary/pymlg.SE3", "_autosummary/pymlg.SL3", "_autosummary/pymlg.SO2", "_autosummary/pymlg.SO3", "index"], "filenames": ["_autosummary/pymlg.MatrixLieGroup.rst", "_autosummary/pymlg.SE2.rst", "_autosummary/pymlg.SE23.rst", "_autosummary/pymlg.SE3.rst", "_autosummary/pymlg.SL3.rst", "_autosummary/pymlg.SO2.rst", "_autosummary/pymlg.SO3.rst", "index.rst"], "titles": ["MatrixLieGroup", "SE2", "SE23", "SE3", "SL3", "SO2", "SO3", "pymlg"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7], "pymlg": [0, 1, 2, 3, 4, 5, 6], "base": [0, 1, 2, 3, 4, 5, 6], "object": 0, "inherit": 0, "all": [0, 1, 2, 3, 4, 5, 6, 7], "group": [0, 1, 2, 3, 4, 5, 6, 7], "provid": 0, "few": 0, "gener": 0, "method": [0, 1, 2, 3, 4, 5, 6, 7], "classmethod": [0, 1, 2, 3, 4, 5, 6], "exp": [0, 1, 2, 3, 4, 5, 6, 7], "x": [0, 1, 2, 3, 4, 5, 6, 7], "shortcut": [0, 1, 2, 3, 4, 5, 6], "r": [0, 1, 2, 3, 4, 5, 6, 7], "n": [0, 1, 2, 3, 4, 5, 6, 7], "directli": [0, 1, 2, 3, 4, 5, 6, 7], "mathrm": [0, 1, 2, 3, 4, 5, 6], "mathbb": [0, 1, 2, 3, 4, 5, 6], "g": [0, 1, 2, 3, 4, 5, 6], "paramet": [0, 1, 2, 3, 4, 5, 6], "np": [0, 1, 2, 3, 4, 5, 6, 7], "ndarrai": [0, 1, 2, 3, 4, 5, 6], "list": [0, 1, 2, 3, 4, 5, 6], "float": [0, 1, 2, 3, 4, 5, 6], "size": [0, 1, 2, 3, 4, 5, 6], "dof": [0, 1, 2, 3, 4, 5, 6], "vector": [0, 1, 2, 3, 4, 5, 6], "exponenti": [0, 1, 2, 3, 4, 5, 6], "coordin": [0, 1, 2, 3, 4, 5, 6], "return": [0, 1, 2, 3, 4, 5, 6], "element": [0, 1, 2, 3, 4, 5, 6, 7], "shape": [0, 1, 2, 3, 4, 5, 6], "type": [0, 1, 2, 3, 4, 5, 6], "log": [0, 1, 2, 3, 4, 5, 6, 7], "1": [0, 1, 2, 3, 4, 5, 6, 7], "static": [0, 1, 2, 3, 4, 5, 6, 7], "adjoint": [0, 1, 2, 3, 4, 5, 6, 7], "represent": [0, 1, 2, 3, 4, 5, 6, 7], "ad": [0, 1, 2, 3, 5, 6], "mathbf": [0, 1, 2, 3, 4, 5, 6], "The": [0, 1, 2, 3, 4, 5, 6], "matrix": [0, 1, 2, 3, 4, 5, 6, 7], "adjoint_algebra": [0, 1, 2, 3, 4, 5, 6], "xi": [0, 1, 2, 3, 4, 5, 6, 7], "algebra": [0, 1, 2, 3, 4, 5, 6], "lie": [0, 1, 2, 3, 4, 5, 6, 7], "none": 0, "degre": [0, 1, 2, 3, 4, 5, 6], "freedom": [0, 1, 2, 3, 4, 5, 6], "int": [0, 1, 2, 3, 4, 5, 6], "map": [0, 1, 2, 3, 4, 5, 6, 7], "from": [0, 1, 2, 3, 4, 5, 6, 7], "mathfrak": [0, 1, 2, 3, 4, 5, 6], "ident": [0, 1, 2, 3, 4, 5, 6], "an": [0, 1, 2, 3, 4, 5, 6, 7], "invers": [0, 1, 2, 3, 4, 5, 6], "left_jacobian": [0, 1, 2, 3, 4, 5, 6, 7], "left": [0, 1, 2, 3, 4, 5, 6, 7], "jacobian": [0, 1, 2, 3, 4, 5, 6, 7], "evalu": [0, 1, 2, 3, 4, 5, 6], "j": [0, 1, 2, 3, 4, 5, 6], "_": [0, 1, 2, 3, 4, 5, 6], "ell": [0, 1, 2, 3, 4, 5, 6], "left_jacobian_inv": [0, 1, 2, 3, 4, 5, 6, 7], "logarithm": [0, 1, 2, 3, 4, 5, 6], "matrix_s": [0, 1, 2, 3, 4, 5, 6], "dimens": [0, 1, 2, 3, 4, 5, 6], "normal": [0, 1, 2, 3, 4, 5, 6], "elimin": [0, 1, 2, 3, 4, 5, 6], "round": [0, 1, 2, 3, 4, 5, 6], "error": [0, 1, 2, 3, 4, 5, 6], "ensur": [0, 1, 2, 3, 4, 5, 6], "i": [0, 1, 2, 3, 4, 5, 6], "proper": [0, 1, 2, 3, 4, 5, 6], "odot": [0, 1, 2, 3, 4, 5, 6, 7], "b": [0, 1, 2, 3, 5, 6, 7], "oper": [0, 1, 2, 3, 4, 5, 6, 7], "defin": [0, 1, 2, 3, 5, 6, 7], "barfoot": [0, 1, 2, 3, 5, 6], "e": [0, 1, 2, 3, 5, 6], "wedg": [0, 1, 2, 3, 4, 5, 6, 7], "m": [0, 2, 3, 5, 6], "random": [0, 1, 2, 3, 4, 5, 6, 7], "A": [0, 1, 2, 3, 4, 5, 6, 7], "right_jacobian": [0, 1, 2, 3, 4, 5, 6, 7], "right": [0, 1, 2, 3, 4, 5, 6, 7], "thi": [0, 1, 2, 3, 4, 5, 6, 7], "calcul": [0, 1, 2, 3, 4, 5, 6], "implement": [0, 1, 2, 3, 4, 5, 6, 7], "us": [0, 1, 2, 3, 4, 5, 6, 7], "fact": [0, 1, 2, 3, 4, 5, 6], "_r": [0, 1, 2, 3, 4, 5, 6], "which": [0, 1, 2, 3, 4, 5, 6], "hold": [0, 1, 2, 3, 4, 5, 6], "right_jacobian_inv": [0, 1, 2, 3, 4, 5, 6, 7], "math": [0, 1, 2, 3, 4, 5, 6], "vee": [0, 1, 2, 3, 4, 5, 6, 7], "cdot": [0, 1, 2, 3, 4, 5, 6], "matrixliegroup": [1, 5], "instanti": [1, 5, 7], "free": [1, 5, 7], "t": [1, 3, 6, 7], "3": [1, 2, 3, 4, 6, 7], "from_compon": [1, 2, 3], "c": [1, 2, 3, 5, 6], "construct": [1, 2, 3], "se": [1, 3], "2": [1, 5, 6, 7], "rotat": [1, 2, 3, 6], "translat": [1, 3], "to_compon": [1, 2, 3], "decompos": [1, 2, 3], "element_se23": 2, "deprec": [2, 3], "9": [2, 6], "v": 2, "se_2": 2, "attitud": 2, "veloc": 2, "posit": [2, 4, 6], "compon": 2, "dcm": [2, 6], "5": 2, "synthes": [2, 3], "extract": 2, "6": 3, "from_ro": [3, 6], "pose_msg": 3, "ro": [3, 6], "pose": [3, 7], "messag": 3, "geometry_msg": [3, 6], "msg": [3, 6], "transform": 3, "4": [3, 4, 6], "instead": 3, "to_ro": [3, 6], "obtain": 4, "section": [4, 6], "7": 4, "comput": [4, 6], "vision": [4, 6], "ead": [4, 6], "8": [4, 6], "sl": 4, "numer": 4, "express": 4, "help": 4, "p": 4, "where": 4, "p_odot": 4, "3x1": 4, "usual": 4, "repres": 4, "phi": 5, "so": 6, "cross": 6, "altern": 6, "name": 6, "ethan": 6, "when": 6, "theta": 6, "small": 6, "taylor": 6, "seri": 6, "expans": 6, "given": 6, "11": 6, "from_eul": 6, "angl": 6, "order": 6, "creat": 6, "euler": 6, "specifi": 6, "valu": 6, "option": 6, "sequenc": 6, "For": 6, "exampl": 6, "default": 6, "third": 6, "axi": 6, "follow": 6, "second": 6, "first": 6, "correspond": 6, "from_quat": 6, "q": 6, "wxyz": 6, "quaternion": 6, "epsilon": 6, "eta": 6, "time": 6, "note": 6, "final": 6, "term": 6, "abid": 6, "robot": 6, "convent": 6, "differ": 6, "2019": 6, "str": 6, "xyzw": 6, "rais": 6, "valueerror": 6, "convert": 6, "to_eul": 6, "rpy": 6, "alpha": 6, "beta": 6, "gamma": 6, "to_quat": 6, "doe": 6, "have": 6, "python": 7, "librari": 7, "common": 7, "function": 7, "repo": 7, "entir": 7, "numpi": 7, "arrai": 7, "intent": 7, "minim": 7, "overhead": 7, "keep": 7, "simpl": 7, "possibl": 7, "ar": 7, "allow": 7, "easi": 7, "consist": 7, "introduct": 7, "import": 7, "se2": 7, "capit": 7, "notat": 7, "0": 7, "actual": 7, "j_l": 7, "j_r": 7, "j_l_inv": 7, "j_r_inv": 7, "click": 7, "tabl": 7, "entri": 7, "below": 7, "go": 7, "each": 7}, "objects": {"pymlg": [[0, 0, 1, "", "MatrixLieGroup"], [1, 0, 1, "", "SE2"], [2, 0, 1, "", "SE23"], [3, 0, 1, "", "SE3"], [4, 0, 1, "", "SL3"], [5, 0, 1, "", "SO2"], [6, 0, 1, "", "SO3"]], "pymlg.MatrixLieGroup": [[0, 1, 1, "", "Exp"], [0, 1, 1, "", "Log"], [0, 1, 1, "", "adjoint"], [0, 1, 1, "", "adjoint_algebra"], [0, 2, 1, "", "dof"], [0, 1, 1, "", "exp"], [0, 1, 1, "", "identity"], [0, 1, 1, "", "inverse"], [0, 1, 1, "", "left_jacobian"], [0, 1, 1, "", "left_jacobian_inv"], [0, 1, 1, "", "log"], [0, 2, 1, "", "matrix_size"], [0, 1, 1, "", "normalize"], [0, 1, 1, "", "odot"], [0, 1, 1, "", "random"], [0, 1, 1, "", "right_jacobian"], [0, 1, 1, "", "right_jacobian_inv"], [0, 1, 1, "", "vee"], [0, 1, 1, "", "wedge"]], "pymlg.SE2": [[1, 1, 1, "", "Exp"], [1, 1, 1, "", "Log"], [1, 1, 1, "", "adjoint"], [1, 1, 1, "", "adjoint_algebra"], [1, 2, 1, "", "dof"], [1, 1, 1, "", "exp"], [1, 1, 1, "", "from_components"], [1, 1, 1, "", "identity"], [1, 1, 1, "", "inverse"], [1, 1, 1, "", "left_jacobian"], [1, 1, 1, "", "left_jacobian_inv"], [1, 1, 1, "", "log"], [1, 2, 1, "", "matrix_size"], [1, 1, 1, "", "normalize"], [1, 1, 1, "", "odot"], [1, 1, 1, "", "random"], [1, 1, 1, "", "right_jacobian"], [1, 1, 1, "", "right_jacobian_inv"], [1, 1, 1, "", "to_components"], [1, 1, 1, "", "vee"], [1, 1, 1, "", "wedge"]], "pymlg.SE23": [[2, 1, 1, "", "Exp"], [2, 1, 1, "", "Log"], [2, 1, 1, "", "adjoint"], [2, 1, 1, "", "adjoint_algebra"], [2, 1, 1, "", "decompose"], [2, 2, 1, "", "dof"], [2, 1, 1, "", "exp"], [2, 1, 1, "", "from_components"], [2, 1, 1, "", "identity"], [2, 1, 1, "", "inverse"], [2, 1, 1, "", "left_jacobian"], [2, 1, 1, "", "left_jacobian_inv"], [2, 1, 1, "", "log"], [2, 2, 1, "", "matrix_size"], [2, 1, 1, "", "normalize"], [2, 1, 1, "", "odot"], [2, 1, 1, "", "random"], [2, 1, 1, "", "right_jacobian"], [2, 1, 1, "", "right_jacobian_inv"], [2, 1, 1, "", "synthesize"], [2, 1, 1, "", "to_components"], [2, 1, 1, "", "vee"], [2, 1, 1, "", "wedge"]], "pymlg.SE3": [[3, 1, 1, "", "Exp"], [3, 1, 1, "", "Log"], [3, 1, 1, "", "adjoint"], [3, 1, 1, "", "adjoint_algebra"], [3, 2, 1, "", "dof"], [3, 1, 1, "", "exp"], [3, 1, 1, "", "from_components"], [3, 1, 1, "", "from_ros"], [3, 1, 1, "", "identity"], [3, 1, 1, "", "inverse"], [3, 1, 1, "", "left_jacobian"], [3, 1, 1, "", "left_jacobian_inv"], [3, 1, 1, "", "log"], [3, 2, 1, "", "matrix_size"], [3, 1, 1, "", "normalize"], [3, 1, 1, "", "odot"], [3, 1, 1, "", "random"], [3, 1, 1, "", "right_jacobian"], [3, 1, 1, "", "right_jacobian_inv"], [3, 1, 1, "", "synthesize"], [3, 1, 1, "", "to_components"], [3, 1, 1, "", "to_ros"], [3, 1, 1, "", "vee"], [3, 1, 1, "", "wedge"]], "pymlg.SL3": [[4, 1, 1, "", "Exp"], [4, 1, 1, "", "Log"], [4, 1, 1, "", "adjoint"], [4, 1, 1, "", "adjoint_algebra"], [4, 2, 1, "", "dof"], [4, 1, 1, "", "exp"], [4, 1, 1, "", "identity"], [4, 1, 1, "", "inverse"], [4, 1, 1, "", "left_jacobian"], [4, 1, 1, "", "left_jacobian_inv"], [4, 1, 1, "", "log"], [4, 2, 1, "", "matrix_size"], [4, 1, 1, "", "normalize"], [4, 1, 1, "", "odot"], [4, 1, 1, "", "random"], [4, 1, 1, "", "right_jacobian"], [4, 1, 1, "", "right_jacobian_inv"], [4, 1, 1, "", "vee"], [4, 1, 1, "", "wedge"]], "pymlg.SO2": [[5, 1, 1, "", "Exp"], [5, 1, 1, "", "Log"], [5, 1, 1, "", "adjoint"], [5, 1, 1, "", "adjoint_algebra"], [5, 2, 1, "", "dof"], [5, 1, 1, "", "exp"], [5, 1, 1, "", "identity"], [5, 1, 1, "", "inverse"], [5, 1, 1, "", "left_jacobian"], [5, 1, 1, "", "left_jacobian_inv"], [5, 1, 1, "", "log"], [5, 2, 1, "", "matrix_size"], [5, 1, 1, "", "normalize"], [5, 1, 1, "", "odot"], [5, 1, 1, "", "random"], [5, 1, 1, "", "right_jacobian"], [5, 1, 1, "", "right_jacobian_inv"], [5, 1, 1, "", "vee"], [5, 1, 1, "", "wedge"]], "pymlg.SO3": [[6, 1, 1, "", "Exp"], [6, 1, 1, "", "Log"], [6, 1, 1, "", "adjoint"], [6, 1, 1, "", "adjoint_algebra"], [6, 1, 1, "", "cross"], [6, 2, 1, "", "dof"], [6, 1, 1, "", "exp"], [6, 1, 1, "", "from_euler"], [6, 1, 1, "", "from_quat"], [6, 1, 1, "", "from_ros"], [6, 1, 1, "", "identity"], [6, 1, 1, "", "inverse"], [6, 1, 1, "", "left_jacobian"], [6, 1, 1, "", "left_jacobian_inv"], [6, 1, 1, "", "log"], [6, 2, 1, "", "matrix_size"], [6, 1, 1, "", "normalize"], [6, 1, 1, "", "odot"], [6, 1, 1, "", "random"], [6, 1, 1, "", "right_jacobian"], [6, 1, 1, "", "right_jacobian_inv"], [6, 1, 1, "", "to_euler"], [6, 1, 1, "", "to_quat"], [6, 1, 1, "", "to_ros"], [6, 1, 1, "", "vee"], [6, 1, 1, "", "wedge"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"]}, "titleterms": {"matrixliegroup": 0, "se2": 1, "se23": 2, "se3": 3, "sl3": 4, "so2": 5, "so3": 6, "pymlg": 7, "content": 7, "exampl": 7, "full": 7, "document": 7}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"MatrixLieGroup": [[0, "matrixliegroup"]], "SE23": [[2, "se23"]], "SE3": [[3, "se3"]], "SL3": [[4, "sl3"]], "SO2": [[5, "so2"]], "SO3": [[6, "so3"]], "pymlg": [[7, "pymlg"]], "Contents:": [[7, null]], "Example": [[7, "example"]], "Full Documentation": [[7, "full-documentation"]], "SE2": [[1, "se2"]]}, "indexentries": {"exp() (pymlg.se2 class method)": [[1, "pymlg.SE2.Exp"]], "log() (pymlg.se2 class method)": [[1, "pymlg.SE2.Log"]], "se2 (class in pymlg)": [[1, "pymlg.SE2"]], "adjoint() (pymlg.se2 static method)": [[1, "pymlg.SE2.adjoint"]], "adjoint_algebra() (pymlg.se2 static method)": [[1, "pymlg.SE2.adjoint_algebra"]], "dof (pymlg.se2 attribute)": [[1, "pymlg.SE2.dof"]], "exp() (pymlg.se2 static method)": [[1, "pymlg.SE2.exp"]], "from_components() (pymlg.se2 static method)": [[1, "pymlg.SE2.from_components"]], "identity() (pymlg.se2 class method)": [[1, "pymlg.SE2.identity"]], "inverse() (pymlg.se2 static method)": [[1, "pymlg.SE2.inverse"]], "left_jacobian() (pymlg.se2 static method)": [[1, "pymlg.SE2.left_jacobian"]], "left_jacobian_inv() (pymlg.se2 class method)": [[1, "pymlg.SE2.left_jacobian_inv"]], "log() (pymlg.se2 static method)": [[1, "pymlg.SE2.log"]], "matrix_size (pymlg.se2 attribute)": [[1, "pymlg.SE2.matrix_size"]], "normalize() (pymlg.se2 static method)": [[1, "pymlg.SE2.normalize"]], "odot() (pymlg.se2 static method)": [[1, "pymlg.SE2.odot"]], "random() (pymlg.se2 static method)": [[1, "pymlg.SE2.random"]], "right_jacobian() (pymlg.se2 class method)": [[1, "pymlg.SE2.right_jacobian"]], "right_jacobian_inv() (pymlg.se2 class method)": [[1, "pymlg.SE2.right_jacobian_inv"]], "to_components() (pymlg.se2 static method)": [[1, "pymlg.SE2.to_components"]], "vee() (pymlg.se2 static method)": [[1, "pymlg.SE2.vee"]], "wedge() (pymlg.se2 static method)": [[1, "pymlg.SE2.wedge"]]}})